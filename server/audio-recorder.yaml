AWSTemplateFormatVersion: '2010-09-09'
Description: 'aws-audio-recorder

  Sample SAM Template for aws-audio-recorder

  '
Globals:
  Function:
    Environment:
      Variables:
        CURRENT_USER_ID: 1
        DB_TABLE: AudioRecordingsTable
    Timeout: 20
Outputs:
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  LambdaHelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value:
      Fn::GetAtt:
      - LambdaHelloWorldFunction
      - Arn
Resources:
  DynamoDBTable:
    Properties:
      AttributeDefinitions:
      - AttributeName: userId
        AttributeType: S
      - AttributeName: recordId
        AttributeType: S
      KeySchema:
      - AttributeName: userId
        KeyType: HASH
      - AttributeName: recordId
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: AudioRecordingsTable
    Type: AWS::DynamoDB::Table
  LambdaApiGetRecordings:
    Properties:
      CodeUri: s3://aws-audio-recorder-packages/9dd5b3a1f3996cd41b6cd9840e47abaf
      Events:
        GetRecordings:
          Properties:
            Method: get
            Path: /recordings
          Type: Api
      Handler: dist/get-recordings.lambdaHandler
      Layers:
      - Ref: LayerSharedModule
      Role:
        Fn::GetAtt:
        - RoleForLambdaDynamoDBReadonly
        - Arn
      Runtime: nodejs8.10
    Type: AWS::Serverless::Function
  LambdaApiGetUploadUrl:
    Properties:
      CodeUri: s3://aws-audio-recorder-packages/bd46641b9a7f63f25677f61688d4d12b
      Events:
        GetUploadUrl:
          Properties:
            Method: get
            Path: /upload-url
          Type: Api
      Handler: dist/get-upload-url.lambdaHandler
      Layers:
      - Ref: LayerSharedModule
      Role:
        Fn::GetAtt:
        - RoleForLambdaDynamoDBReadonly
        - Arn
      Runtime: nodejs8.10
    Type: AWS::Serverless::Function
  LambdaHelloWorldFunction:
    Properties:
      CodeUri: s3://aws-audio-recorder-packages/83247eda976cb2922c8e70bfac95d321
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        HelloWorld:
          Properties:
            Method: get
            Path: /hello
          Type: Api
      Handler: dist/index.lambdaHandler
      Runtime: nodejs8.10
    Type: AWS::Serverless::Function
  LambdaS3CreateRecording:
    Properties:
      CodeUri: s3://aws-audio-recorder-packages/54c86eb586264e15526c1db7ec720752
      Events:
        UploadRecordingToS3:
          Properties:
            Bucket:
              Ref: S3RecordingsBucket
            Events: s3:ObjectCreated:*
          Type: S3
      Handler: dist/create-recording.lambdaHandler
      Layers:
      - Ref: LayerSharedModule
      Role:
        Fn::GetAtt:
        - RoleForLambdaS3RecordingsReadonly
        - Arn
      Runtime: nodejs8.10
    Type: AWS::Serverless::Function
  LayerSharedModule:
    Properties:
      CompatibleRuntimes:
      - nodejs8.10
      ContentUri: s3://aws-audio-recorder-packages/684b24282d5e170834e305451721121c
      Description: Application core module
      LayerName: CoreModule
    Type: AWS::Serverless::LayerVersion
  PolicyForWebHostingBucket:
    Properties:
      Bucket:
        Ref: S3WebHostingBucket
      PolicyDocument:
        Id: WebHostingPolicy
        Statement:
        - Action: s3:GetObject
          Effect: Allow
          Principal: '*'
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: S3WebHostingBucket
              - /*
          Sid: PublicReadForGetBucketObjects
        Version: 2012-10-17
    Type: AWS::S3::BucketPolicy
  RoleForLambdaDynamoDBReadonly:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - dynamodb:BatchGetItem
            - dynamodb:GetItem
            - dynamodb:Query
            - dynamodb:Scan
            Effect: Allow
            Resource: arn:aws:dynamodb:eu-west-1:273063963518:table/AudioRecordingsTable
          Version: '2012-10-17'
        PolicyName: audio-recorder-dynamodb-readonly
    Type: AWS::IAM::Role
  RoleForLambdaS3RecordingsReadonly:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      Policies:
      - PolicyName: audio-recorder-s3-recordings-readonly
        PolycDocument:
          Statement:
          - Action:
            - s3:GetObject
            Effect: Allow
            Resource:
              Fn::GetAtt:
              - S3RecordingsBucket
              - Arn
          Version: '2012-10-17'
    Type: AWS::IAM::Role
  S3RecordingsBucket:
    Properties:
      BucketName: audio-recorder-recordings-bucket
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
          - '*'
          AllowedMethods:
          - POST
          - PUT
          - GET
          - DELETE
          - HEAD
          AllowedOrigins:
          - '*'
      NotificationConfiguration:
        LambdaConfigurations:
          Event: s3:ObjectCreated:*
          Filter:
            S3Key:
              Rules:
              - Name: prefix
                Value: audio-files/
          Function:
            Fn::GetAtt:
            - LambdaS3CreateRecording
            - Arn
      Tags:
      - Key: AppName
        Value: AudioRecorder
    Type: AWS::S3::Bucket
  S3WebHostingBucket:
    Properties:
      AccessControl: PublicRead
      BucketName: audio-recorder-hosting-bucket
      Tags:
      - Key: AppName
        Value: AudioRecorder
      WebsiteConfiguration:
        ErrorDocument: error.html
        IndexDocument: index.html
    Type: AWS::S3::Bucket
Transform: AWS::Serverless-2016-10-31
