import { DynamoDB, AWSError } from 'aws-sdk';
import { Recording, AudioInfo } from '../models';

const {
    DB_TABLE,
    CURRENT_USER_ID
} = process.env;

let db: DynamoDB.DocumentClient;

const getDb = () => {
    if (!db) {
        db = new DynamoDB.DocumentClient({});
    }
    return db;
}

export const loadRecordingsByUser = async (userId: string): Promise<Recording[]> => {
    const res = await getDb().query({
        TableName: DB_TABLE!,
        KeyConditionExpression: 'userId = :userId',
        ExpressionAttributeValues: {
            ':userId': userId
        }
    }).promise();
    return (res.Items || []) as Recording[];
}

export const saveRecording = async (record: Recording): Promise<unknown> => {
    if (!record.userId || !record.recordId) {
        throw new Error('Missing recordId or userId in the provided recording');
    }
    const result = await getDb().put({
        TableName: DB_TABLE!,
        Item: record
    }).promise();

    return result;
}